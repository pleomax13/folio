{"version":3,"sources":["components/lot(10).JPG","components/images/bin.svg","components/images/pencil.svg","components/RegistrFormSchema.js","components/NavBar.js","components/Header.js","components/Footer.js","components/Headline.js","components/About.js","components/photData.js","components/AddPhotographerSchema.js","components/AddPhotographer.js","components/Photographers.js","components/Lot.js","components/lotData.js","components/AddNewLotSchema.js","components/AddNewLot.js","components/LotDetails.js","components/EditLotSchema.js","components/EditLot.js","components/LotsList.js","components/Registr.js","components/Main.js","App.js","serviceWorker.js","index.js","components/lot(9).JPG"],"names":["module","exports","__webpack_require__","p","RegistrFormSchema","Yup","shape","email","required","username","min","max","password","NavBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","handleClose","bind","assertThisInitialized","handleOpen","setState","react_default","a","createElement","Fragment","Navbar_default","bg","variant","className","collapseOnSelect","expand","fixed","Link","to","Toggle","aria-controls","Collapse","Nav_default","style","color","onClick","Modal_default","onHide","Header","closeButton","Title","Body","formik_esm","initialValues","validationSchema","onSubmit","console","log","render","_ref","errors","touched","action","method","htmlFor","type","aria-describedby","placeholder","name","id","Button_default","React","Component","Container_default","components_NavBar","Footer","Headline","props","headline","toUpperCase","About","components_Headline","Row_default","maxWidth","Col_default","photData","fio","birthday","inform","AddPhotographerSchema","Date","age","setFullYear","getFullYear","AddPhotographer","isLoading","handleClick","_this2","Promise","resolve","setTimeout","then","_this3","undefined","component","ButtonToolbar_default","disabled","Edit","filter","value","phot","findPhotographer","parseInt","match","params","components_AddPhotographer","Photographers","dataState","map","key","concat","title","src","pencil","alt","cursor","bin","Switch","Route","path","exact","Table_default","striped","hover","bordered","responsive","data-id","Lot","endDate","date","now","getTime","getMonth","getDate","endAuction","xl","lg","md","sm","textDecoration","link","width","height","maxHeight","Card_default","Img","img","ListGroup_default","Item","author","price","lotData","startPrice","year","startDate","img1","AddNewLotSchema","dateEnd","AddNewLot","photographers","val","addFile","priceStart","LotDetails","total","Math","ceil","string","toString","last","length","prev","start","current","minVal","schema","rate","days","buttonDis","block","EditLotSchema","clone","dateStart","setDate","EditLot","Details","lot","findLot","components_LotDetails","components_EditLot","LotsList","Lots","components_Lot","dataId","components_AddNewLot","Registr","history","goBack","Main","react_transition_group","classNames","timeout","location","App","components_Header","components_Main","components_Footer","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mdCezBC,EAbWC,WAAaC,MAAM,CACzCC,MAAOF,WACFE,MAAM,gLACNC,SAAS,iJACdC,SAAUJ,WACLK,IAAI,EAAG,qMACPC,IAAI,GAAI,+QACRH,SAAS,iJACdI,SAAUP,WACLK,IAAI,EAAG,qMACPF,SAAS,4JC0GHK,cA3GX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACTC,MAAM,GAGVR,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKY,WAAaZ,EAAKY,WAAWF,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARRA,6EAYVG,KAAKU,SAAS,CACVL,MAAM,yCAKVL,KAAKU,SAAS,CACVL,MAAM,qCAKV,OACIM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,GAAK,OAAOC,QAAU,OAAOC,UAAY,yBAAyBC,kBAAgB,EAACC,OAAS,KAAKC,MAAQ,OAC7GV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMJ,UAAY,eAAeK,GAAK,UAASZ,EAAAC,EAAAC,cAAA,MAAIK,UAAY,UAAhB,WAC/CP,EAAAC,EAAAC,cAACE,EAAAH,EAAOY,OAAR,CAAeC,gBAAgB,0BAC/Bd,EAAAC,EAAAC,cAACE,EAAAH,EAAOc,SAAR,KACIf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAKM,UAAY,gBAAgBU,MAAS,CAACC,MAAO,UAC9ClB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAK,SAASL,UAAY,YAAhC,8CACAP,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAK,uBAAuBL,UAAY,YAA9C,0DACAP,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAK,iBAAiBL,UAAY,YAAxC,+CAERP,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAKM,UAAY,iCACbP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAAf,EAAIU,KAAL,CAAWQ,QAAW9B,KAAKS,YAA3B,mCAEJE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAK,aAAaL,UAAY,YAApC,mHAIRP,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAOP,KAAQL,KAAKI,MAAMC,KAAM2B,OAAUhC,KAAKM,aAC3CK,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMqB,OAAP,CAAcC,aAAW,GACrBvB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMuB,MAAP,4EAEJxB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMwB,KAAP,KACIzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbhD,MAAO,GACPK,SAAU,IAEd4C,iBAAoBpD,EACpBqD,SAAY,kBAAMC,QAAQC,IAAI,UAE9BC,OAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACNnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIU,OAAO,GACPC,OAAO,QAEPrC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,SAAjB,UACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAK,QACLhC,UAAU,eACViC,mBAAiB,YACjBC,YAAY,sBACZC,KAAK,UAGLR,EAAOvD,OACPwD,EAAQxD,OAASqB,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOvD,OAE5DqB,EAAAC,EAAAC,cAAA,SAAOyC,GAAG,YAAYpC,UAAU,wBAAhC,iUAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,YAAjB,wCACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAK,WACLhC,UAAU,eACVkC,YAAY,kFACZC,KAAK,aAGLR,EAAOlD,UACPmD,EAAQnD,UAAYgB,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOlD,WAGnEgB,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,UAEViC,KAAO,SACPhC,UAAY,mBAJhB,gDA1FXsC,IAAMC,WCcZxB,2LAjBP,OACItB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,UAAQK,UAAY,kBAChBP,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CAAWM,UAAU,OACjBP,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yCAGRF,EAAAC,EAAAC,cAAC8C,EAAD,cAbSH,IAAMC,YCQZG,2LARP,OACIjD,EAAAC,EAAAC,cAAA,UAAQK,UAAY,kBAChBP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,uCAAjB,sCAJKsC,IAAMC,8BCWZI,2LARP,OACIlD,EAAAC,EAAAC,cAAA,MAAIK,UAAY,6BACXlB,KAAK8D,MAAMC,SAASC,cADzB,aAHWR,IAAMC,8CCuBdQ,iMAlBP,OACItD,EAAAC,EAAAC,cAAA,OAAKK,UAAY,wBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,sDACrBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKM,UAAY,UAAUU,MAAS,CAACwC,SAAU,WAC3CzD,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAKM,UAAY,0CACbP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,27BARR2C,IAAMC,8BCsCXa,EA7CE,CACb,CACIC,IAAK,iKACLC,SAAU,aACVC,OAAQ,IACRnB,GAAI,GAER,CACIiB,IAAK,yIACLC,SAAU,aACVC,OAAQ,IACRnB,GAAI,GAER,CACIiB,IAAK,2JACLC,SAAU,aACVC,OAAQ,IACRnB,GAAI,GAER,CACIiB,IAAK,mIACLC,SAAU,aACVC,OAAQ,IACRnB,GAAI,GAER,CACIiB,IAAK,+IACLC,SAAU,aACVC,OAAQ,IACRnB,GAAG,GAEP,CACIiB,IAAK,+IACLC,SAAU,aACVC,OAAQ,IACRnB,GAAG,GAEP,CACIiB,IAAK,yIACLC,SAAU,aACVC,OAAQ,IACRnB,GAAI,yDCvBGoB,MAhBetF,WAAaC,MAAM,CAC7CkF,IAAKnF,WACAK,IAAI,EAAG,qMACPF,SAAS,iJACdiF,SAAUpF,SACLM,IAAI,IAAIiF,KAKjB,WACI,IAAIC,EAAM,IAAID,KAEd,OAAOC,EAAIC,YAAYD,EAAIE,cAAgB,IARzBpF,IAAQ,iMACrBH,SAAS,iJACdkF,OAAQrF,uBC2GG2F,cArGX,SAAAA,IAAc,IAAAlF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACVlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,QAEKI,MAAQ,CACT4E,WAAY,GAEhBnF,EAAKoF,YAAcpF,EAAKoF,YAAY1E,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANTA,6EASA,IAAAqF,EAAAlF,KACVA,KAAKU,SAAS,CAACsE,WAAW,GAAO,WAd9B,IAAIG,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAejBE,KAAK,WAC1BJ,EAAKxE,SAAS,CAAEsE,WAAW,yCAK9B,IAAAO,EAAAvF,KACEgF,EAAahF,KAAKI,MAAlB4E,UAEP,OACIrE,EAAAC,EAAAC,cAAA,OAAKK,UAAY,gBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAY/D,KAAK8D,MAAMC,WACjCpD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbiC,SAAwBiB,IAAnBxF,KAAK8D,MAAMS,IAAoB,GAAKvE,KAAK8D,MAAMS,IACpDC,cAAkCgB,IAAxBxF,KAAK8D,MAAMU,SAAyB,GAAKxE,KAAK8D,MAAMU,SAC9DC,YAA8Be,IAAtBxF,KAAK8D,MAAMW,OAAuB,GAAKzE,KAAK8D,MAAMW,QAE9DlC,iBAAoBmC,EACpBlC,SAAYxC,KAAKiF,YAEjBtC,OAAU,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAQC,EAAVF,EAAUE,QAAV,OACNnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgB,KAAQkC,EAAKzB,MAAMT,KACnBN,OAAUwC,EAAKzB,MAAMf,OACrBC,OAAS,OACT9B,UAAY,YAEZP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,OAAjB,sBACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,QAGPR,EAAO0B,KACPzB,EAAQyB,KAAO5D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAO0B,MAG9D5D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,YAAjB,6EACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,aAGPR,EAAO2B,UACP1B,EAAQ0B,UAAY7D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAO2B,WAGnE7D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,UAAjB,gEACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIoD,UAAY,WACZvE,UAAY,eACZmC,KAAO,WAGPR,EAAO4B,QACP3B,EAAQ2B,QAAU9D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAO4B,SAGjE9D,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAeM,UAAY,0BACnBP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,UACVC,UAAY,OACZgC,KAAO,SACPG,KAAK,SACLsC,SAAYX,GAEXA,EAAY,sDAAgB,0DAEjCrE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIJ,UAAY,oBACZmC,KAAK,SACL9B,GAAK,wBAHT,qDAtFNiC,IAAMC,WCF9BmC,2LACetC,GAGb,OAFagB,EAASuB,OAAO,SAAAC,GAAK,OAAIA,EAAMxC,KAAOA,IAEvC,oCAIZ,IAAMyC,EAAO/F,KAAKgG,iBAAiBC,SAASjG,KAAK8D,MAAMoC,MAAMC,OAAO7C,GAAI,KAExE,OAAKyC,EAKDpF,EAAAC,EAAAC,cAACuF,EAAD,CACI/C,KAAO,eACPN,OAAS,GACTgB,SAAW,kNACXQ,IAAOwB,EAAKxB,IACZC,SAAYuB,EAAKvB,SACjBC,OAAUsB,EAAKtB,SAVd9D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,4BAA2BP,EAAAC,EAAAC,cAAA,0KAX1C2C,IAAMC,WAoJV4C,cAxHX,SAAAA,IAAc,IAAAxG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACVxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,QAEKI,MAAQ,CACTmE,IAAK,GACLC,SAAU,GACVC,OAAQ,GACRpE,MAAM,EACNiD,GAAI,IAGRzD,EAAKyG,UAAYzG,EAAKyG,UAAU/F,KAAfT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACjBA,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKY,WAAaZ,EAAKY,WAAWF,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAbRA,yEAgBJ0E,EAAKC,EAAUC,GACrBzE,KAAKU,SAAS,CACV6D,IAAKA,EACLC,SAAUA,EACVC,OAAQA,0CAKZzE,KAAKU,SAAS,CACVL,MAAM,uCAIHiD,EAAIiB,GACXvE,KAAKU,SAAS,CACVL,MAAM,EACNiD,GAAIA,EACJiB,IAAKA,qCAIJ,IAAAW,EAAAlF,KACC+F,EAAOzB,EAASiC,IAAI,SAAAT,GAAK,OACvBnF,EAAAC,EAAAC,cAAA,MAAI2F,IAAOV,EAAMxC,IACb3C,EAAAC,EAAAC,cAAA,UAAKiF,EAAMvB,KACX5D,EAAAC,EAAAC,cAAA,UAAKiF,EAAMtB,UACX7D,EAAAC,EAAAC,cAAA,UAAKiF,EAAMrB,QACX9D,EAAAC,EAAAC,cAAA,MAAIK,UAAY,eACZP,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIJ,UAAY,YACZK,GAAE,0CAAAkF,OAA8CX,EAAMxC,IACtDoD,MAAQ,kFAER/F,EAAAC,EAAAC,cAAA,OAAK8F,IAAOC,IAAQC,IAAM,oFAE9BlG,EAAAC,EAAAC,cAAA,QACIiB,QAAW,kBAAMoD,EAAKzE,WAAWqF,EAAMxC,GAAIwC,EAAMvB,MACjD3C,MAAS,CAACkF,OAAQ,YAElBnG,EAAAC,EAAAC,cAAA,OAAK8F,IAAOI,IAAKF,IAAM,oDAK3C,OACIlG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACIrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,wCACVvE,OAAU,kBACNhC,EAAAC,EAAAC,cAACuF,EAAD,CACI/C,KAAO,gBACPN,OAAS,GACTgB,SAAW,+LAIvBpD,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAO,uBAChBvE,OAAU,kBACNhC,EAAAC,EAAAC,cAAA,OAAKK,UAAY,qBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,2DACjBpD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMJ,UAAY,kCAAkCK,GAAK,yCAAzD,2GACAZ,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAOK,QAAU,OAAOoG,SAAO,EAACC,OAAK,EAACC,UAAQ,EAACC,YAAU,GACrD7G,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,aACKkF,QAMzBpF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACIC,KAAO,6CACPzB,UAAaG,IAjCrB,QAsCAjF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAOP,KAAQL,KAAKI,MAAMC,KAAM2B,OAAUhC,KAAKM,aACvCK,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMqB,OAAP,CAAcC,aAAW,GACrBvB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMuB,MAAP,0DAEJxB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMwB,KAAP,KACIzB,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAAA,SAAIb,KAAKI,MAAMmE,MAEnB5D,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMgD,OAAP,KACIjD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQK,QAAQ,YAAYa,QAAW9B,KAAKM,aAA5C,sBACAK,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQK,QAAQ,SAASwG,UAAWzH,KAAKI,MAAMkD,IAA/C,0BAhHAE,IAAMC,8CCyBnBiE,wLAxDP,IAAMC,EAAU,IAAIhD,KAAK3E,KAAK8D,MAAM8D,MAC9BC,EAAM,IAAIlD,KAGhB,OAFcgD,EAAQG,UAAYD,EAAIC,WAE1B,EACD9H,KAAK8D,MAAM8D,KAEbD,EAAQI,aAAeF,EAAIE,YAAcJ,EAAQK,YAAcH,EAAIG,UAC7D,6CAEC,oFAIhB,IAAMJ,EAAO5H,KAAKiI,aAClB,OACItH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAKsH,GAAM,EAAGC,GAAM,EAAGC,GAAM,EAAGC,GAAM,GAClC1H,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIM,MAAS,CAACwC,SAAU,QAASkE,eAAgB,QAC7CpH,UAAY,oCACZK,GAAMvB,KAAK8D,MAAMyE,MAEb5H,EAAAC,EAAAC,cAAA,OAAKK,UAAY,kFAAkFU,MAAS,CAAC4G,MAAO,OAAQC,OAAQ,QAASC,UAAW,UACpJ/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKgI,IAAN,CAAU3H,QAAU,MAAM0F,IAAO3G,KAAK8D,MAAM+E,IAAKjH,MAAS,CAAC6G,OAAQ,OAAQrE,SAAU,OAAQoE,MAAO,OAAQE,UAAW,YAE3H/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKwB,KAAN,KACIzB,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKuB,MAAN,CAAYjB,UAAY,aAAalB,KAAK8D,MAAMT,OAEpD1C,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,CAAWM,UAAY,oBACnBP,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,SAASU,MAAS,CAAC6G,OAAQ,SACnD9H,EAAAC,EAAAC,cAAA,OAAKK,UAAY,aAAjB,mCACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,0CACZlB,KAAK8D,MAAMkF,SAGpBrI,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,UACxBP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,aAAjB,wEACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,yDACZlB,KAAK8D,MAAMmF,SAIxBtI,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKgD,OAAN,KACIjD,EAAAC,EAAAC,cAAA,SAAOK,UAAY,qBACfP,EAAAC,EAAAC,cAAA,+FACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,8CACZ0G,cAhDnBpE,IAAMC,oDCwDTyF,GA1DC,CACZ,CACIL,IAAKA,KACLxF,KAAM,MACN2F,OAAO1E,EAAS,GAAGC,IACnB0E,MAAO,MACPrB,KAAK,aACLtE,GAAI,EACJ6F,WAAY,KACZC,KAAM,KACNC,UAAW,cAEf,CACIR,IAAKS,KACLjG,KAAM,OACN2F,OAAO1E,EAAS,GAAGC,IACnB0E,MAAO,MACPrB,KAAK,aACLtE,GAAI,EACJ6F,WAAY,MACZC,KAAM,OACNC,UAAW,cAEf,CACIR,IAAKA,KACLxF,KAAM,OACN2F,OAAO1E,EAAS,GAAGC,IACnB0E,MAAO,OACPrB,KAAK,aACLtE,GAAI,EACJ6F,WAAY,MACZC,KAAM,OACNC,UAAW,cAEf,CACIR,IAAKS,KACLjG,KAAM,SACN2F,OAAO1E,EAAS,GAAGC,IACnB0E,MAAO,MACPrB,KAAK,aACLtE,GAAI,EACJ6F,WAAY,MACZC,KAAM,OACNC,UAAW,cAEf,CACIR,IAAKA,KACLxF,KAAM,OACN2F,OAAO1E,EAAS,GAAGC,IACnB0E,MAAO,MACPrB,KAAK,aACLtE,GAAI,EACJ6F,WAAY,MACZC,KAAM,OACNC,UAAW,eCpCJE,OApBSnK,WAAaC,MAAM,CACvCgE,KAAMjE,WACDG,SAAS,iJACd6J,KAAMhK,WACDM,KAWM,IAAIiF,MAEHG,cAbI,uLACXvF,SAAS,iJACd4J,WAAY/J,WACPK,IAAI,EAAG,gLACPF,SAAS,iJACdiK,QAASpK,SACJK,IAAI,IAAIkF,KAAQ,+MAChBpF,SAAS,uJC8IHkK,eA3IX,SAAAA,IAAc,IAAA5J,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IACV5J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,QAEKI,MAAQ,CACT4E,WAAY,GAEhBnF,EAAKoF,YAAcpF,EAAKoF,YAAY1E,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANTA,6EASA,IAAAqF,EAAAlF,KACVA,KAAKU,SAAS,CAACsE,WAAW,GAAO,WAd9B,IAAIG,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAejBE,KAAK,WAC1BJ,EAAKxE,SAAS,CAAEsE,WAAW,yCAK9B,IAAAO,EAAAvF,KACEgF,EAAahF,KAAKI,MAAlB4E,UACD0E,EAAgBpF,EAASiC,IAAI,SAAAoD,GAAG,OAAGhJ,EAAAC,EAAAC,cAAA,UAAQiF,MAAO6D,EAAIpF,IAAKiC,IAAOmD,EAAIrG,IAAKqG,EAAIpF,OAErF,OACI5D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,gBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAY/D,KAAK8D,MAAMC,WACjCpD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbe,KAAM,GACN+F,KAAK,GACLD,WAAW,GACXK,QAAQ,GACRR,OAAO,GACPY,QAAS,IAEbrH,iBAAoBgH,GACpB/G,SAAYxC,KAAKiF,YAEjBtC,OAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACNnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgB,KAAO,aACPN,OAAUwC,EAAKzB,MAAMf,OACrBC,OAAS,OACT9B,UAAY,YAEXP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACdP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,QAAjB,6EACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,SAGPR,EAAOQ,MACPP,EAAQO,MAAQ1C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOQ,OAG/D1C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,UAAjB,kCACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIoD,UAAY,SACZvE,UAAY,eACZmC,KAAO,UAGPR,EAAOmG,QACPlG,EAAQkG,QAAUrI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOmG,QAExDU,IAGT/I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,QAAjB,sBACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,SACPhC,UAAY,eACZmC,KAAO,SAGPR,EAAOuG,MACPtG,EAAQsG,MAAQzI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOuG,OAG/DzI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,cAAjB,mFACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,SACPhC,UAAY,eACZmC,KAAO,eAGPR,EAAOgH,YACP/G,EAAQ+G,YAAclJ,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOgH,aAGrElJ,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,WAAjB,mFACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,YAGPR,EAAO2G,SACP1G,EAAQ0G,SAAW7I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAO2G,UAGlE7I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,WAAjB,iHACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,oBACZmC,KAAO,aAGf1C,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAeM,UAAY,0BACnBP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,UACVC,UAAY,OACZgC,KAAO,SACPG,KAAK,SACLsC,SAAYX,GAEXA,EAAY,sDAAgB,0DAEjCrE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIJ,UAAY,oBACZmC,KAAK,SACL9B,GAAK,kBAHT,qDA5HZiC,IAAMC,WC8MfqG,eA/MX,SAAAA,IAAc,IAAAjK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8J,IACVjK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgK,GAAA3J,KAAAH,QAEKI,MAAQ,CACTC,MAAM,GAGVR,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKY,WAAaZ,EAAKY,WAAWF,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARRA,4EAYV,IAAM8H,EAAU,IAAIhD,KAAK3E,KAAK8D,MAAM8D,MAC9BC,EAAM,IAAIlD,KACVoF,EAAQC,KAAKC,MAAMtC,EAAQG,UAAYD,EAAIC,WAAW,IAAK,GAAG,GAAG,IACjEoC,EAASH,EAAMI,WACfC,EAAOF,EAAOA,EAAOG,OAAO,GAC5BC,EAAOJ,EAAOA,EAAOG,OAAO,GAWlC,OAAGN,GAAS,EACD,IAAAtD,OAAIsD,EAAJ,KAAAtD,OAVK,MAAT2D,GAAyB,MAATE,EACR,2BAEQ,MAATF,GAAwB,MAATA,GAAyB,MAATA,GAA0B,MAATE,EAG9C,2BAFD,uBAMmB,GAEzB3C,EAAQI,aAAeF,EAAIE,YAAcJ,EAAQK,YAAcH,EAAIG,UACjE,CAAC,8BAAU,GAEV,CAAC,oDAAY,yCAIzBhI,KAAKU,SAAS,CACVL,MAAM,yCAKVL,KAAKU,SAAS,CACVL,MAAM,qCAKV,IAAIkK,EAAQvK,KAAK8D,MAAMqF,WACnBqB,EAAUxK,KAAK8D,MAAMmF,MAIzB,SAASwB,IACL,OAAID,GAAWD,EACJC,EAAQ,EAEPD,EAPhBA,EAAQtE,SAASsE,EAAO,IACxBC,EAAUvE,SAASuE,EAAS,IAS5B,IAAME,EAAStL,WAAaC,MAAM,CAC9BsL,KAAMvL,WACDK,IAAIgL,IADH,4GAAAhE,OACmCgE,IADnC,0BAIV,OAAOC,mCAGF,IAAAxF,EAAAlF,KACC4K,EAAO5K,KAAKiI,aAAa,GACzB4C,EAAY7K,KAAKiI,aAAa,GAC9ByC,EAAS1K,KAAK0K,SAEpB,OACI/J,EAAAC,EAAAC,cAAA,OAAKK,UAAY,qBACjBP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,qFACrBpD,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAeM,UAAY,aACvBP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,SACVC,UAAY,YACZY,QAAW,kBAAMoD,EAAKzE,eAH1B,iEAOAE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIL,QAAU,UACVC,UAAY,uBACZK,GAAE,sBAAAkF,OAA0BzG,KAAK8D,MAAMR,GAArC,cAHN,sGAQJ3C,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAKM,UAAY,yBAAyBgH,GAAM,EAAGC,GAAM,EAAGC,GAAM,GAC9DzH,EAAAC,EAAAC,cAAA,OAAK8F,IAAO3G,KAAK8D,MAAM+E,IAAKjH,MAAS,CAACwC,SAAU,OAAQoE,MAAO,QAAStH,UAAY,UAAU2F,IAAO7G,KAAK8D,MAAMT,QAEpH1C,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAKsH,GAAM,EAAGC,GAAK,EAAGC,GAAM,GACxBzH,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,KACID,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKwB,KAAN,KACIzB,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKuB,MAAN,KAAanC,KAAK8D,MAAMT,OAE5B1C,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,CAAWM,UAAY,oBACnBP,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,SAASU,MAAS,CAAC6G,OAAQ,SACnD9H,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,0CACZlB,KAAK8D,MAAMkF,SAGpBrI,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,UACxBP,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,0CACZlB,KAAK8D,MAAMsF,QAIxBzI,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKwB,KAAN,KACIzB,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIM,UAAY,UACZD,QAAU,SACV6J,OAAK,EACLnF,UAAQ,GAEP3F,KAAK8D,MAAMuF,UANhB,MAM8BrJ,KAAK8D,MAAM8D,OAG7CjH,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,CAAWM,UAAY,oBACnBP,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,UACxBP,EAAAC,EAAAC,cAAA,oIACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,sDACZ0J,IAGTjK,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,UACxBP,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,sDACZlB,KAAK8D,MAAMqF,WADhB,wBAIJxI,EAAAC,EAAAC,cAACiI,GAAAlI,EAAUmI,KAAX,CAAgB7H,UAAY,UACxBP,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,sDACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAY,gBAAgBlB,KAAK8D,MAAMmF,OADjD,yBAKRtI,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAKgD,OAAN,KACIjD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbqI,KAAM,IAEVpI,iBAAoBmI,EACpBlI,SAAY,kBAAMC,QAAQC,IAAI,SAC9BC,OAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACNnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgB,KAAO,WACPN,OAAUmC,EAAKpB,MAAMf,OACrBC,OAAS,OACT9B,UAAY,wBAEZP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,8CACbP,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,SACPhC,UAAY,uBACZmC,KAAO,OACPsC,SAAYkF,IAGZhI,EAAO8H,MACP7H,EAAQ6H,MAAQhK,EAAAC,EAAAC,cAAA,OAAKK,UAAY,4BAA4B2B,EAAO8H,OAI5EhK,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACQK,QAAU,UACVC,UAAY,eACZgC,KAAO,SACPG,KAAK,SACLsC,SAAYkF,GALpB,2FAgB5BlK,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAOP,KAAQL,KAAKI,MAAMC,KAAM2B,OAAUhC,KAAKM,aACnCK,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMqB,OAAP,CAAcC,aAAW,GACrBvB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMuB,MAAP,0DAEJxB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMwB,KAAP,KACIzB,EAAAC,EAAAC,cAAA,4EAEJF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAMgD,OAAP,KACIjD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQK,QAAQ,YAAYa,QAAW9B,KAAKM,aAA5C,sBACAK,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQK,QAAQ,UAAhB,0BAxMHuC,IAAMC,WCGhBsH,OAbOxB,GAAgByB,QAAQ3L,MAAM,CAChD4L,UAAW7L,SACNG,SAAS,iJACTE,IAGT,WACI,IAAIA,EAAM,IAAIkF,KAGd,OADAlF,EAAIyL,QAAQzL,EAAIuI,UAAU,GACnBvI,EAPEA,GAAO,mMCmKL0L,eAzJX,SAAAA,IAAc,IAAAtL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmL,IACVtL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqL,GAAAhL,KAAAH,QAEKI,MAAQ,CACT4E,WAAY,GAEhBnF,EAAKoF,YAAcpF,EAAKoF,YAAY1E,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANTA,6EASA,IAAAqF,EAAAlF,KACVA,KAAKU,SAAS,CAACsE,WAAW,GAAO,WAd9B,IAAIG,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAejBE,KAAK,WAC1BJ,EAAKxE,SAAS,CAAEsE,WAAW,yCAK9B,IAAAO,EAAAvF,KACEgF,EAAahF,KAAKI,MAAlB4E,UACD0E,EAAgBpF,EAASiC,IAAI,SAAAoD,GAAG,OAAGhJ,EAAAC,EAAAC,cAAA,UAAQiF,MAAO6D,EAAIpF,IAAKiC,IAAOmD,EAAIrG,IAAKqG,EAAIpF,OAErF,OACI5D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,gBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,kHACrBpD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbe,KAAMrD,KAAK8D,MAAMT,KACjBmG,QAASxJ,KAAK8D,MAAM0F,QACpBL,WAAYnJ,KAAK8D,MAAMqF,WACvBH,OAAQhJ,KAAK8D,MAAMkF,OACnBiC,UAAWjL,KAAK8D,MAAMuF,UACtBO,QAAS,GACTR,KAAMpJ,KAAK8D,MAAMsF,MAErB7G,iBAAoBwI,GACpBvI,SAAYxC,KAAKiF,YAEjBtC,OAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OACNnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgB,KAAO,aACPN,OAAUwC,EAAKzB,MAAMf,OACrBC,OAAS,OACT9B,UAAY,YAEXP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACdP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,QAAjB,6EACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,SAGPR,EAAOQ,MACPP,EAAQO,MAAQ1C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOQ,OAG/D1C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,UAAjB,kCACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIoD,UAAY,SACZvE,UAAY,eACZmC,KAAO,UAGPR,EAAOmG,QACPlG,EAAQkG,QAAUrI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOmG,QAExDU,IAIT/I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,QAAjB,sBACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,SACPhC,UAAY,eACZmC,KAAO,SAGPR,EAAOuG,MACPtG,EAAQsG,MAAQzI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOuG,OAG/DzI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,cAAjB,mFACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,SACPhC,UAAY,eACZmC,KAAO,eAGPR,EAAOsG,YACPrG,EAAQqG,YAAcxI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOsG,aAGrExI,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,aAAjB,iEACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,cAGPR,EAAOoI,WACPnI,EAAQmI,WAAatK,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOoI,YAGpEtK,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,WAAjB,mFACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,eACZmC,KAAO,YAGPR,EAAO2G,SACP1G,EAAQ0G,SAAW7I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAO2G,UAGlE7I,EAAAC,EAAAC,cAAA,OAAKK,UAAY,cACbP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,WAAjB,iHACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAO,OACPhC,UAAY,oBACZmC,KAAO,aAGf1C,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAeM,UAAY,0BACnBP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,UACVC,UAAY,OACZgC,KAAO,SACPG,KAAK,SACLsC,SAAYX,GAEXA,EAAY,sDAAgB,0DAEjCrE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIJ,UAAY,oBACZmC,KAAK,SACL9B,GAAE,sBAAAkF,OAA0BlB,EAAKzB,MAAMR,KAH3C,qDA1IdE,IAAMC,WCJtB2H,mLACM9H,GAGJ,OAFY4F,GAAQrD,OAAO,SAAAC,GAAK,OAAIA,EAAMxC,KAAOA,IAEtC,oCAIX,IAAM+H,EAAMrL,KAAKsL,QAAQrF,SAASjG,KAAK8D,MAAMoC,MAAMC,OAAO7C,GAAI,KAE9D,OAAK+H,EAKD1K,EAAAC,EAAAC,cAAC0K,GAAD,CACI1C,IAAOwC,EAAIxC,IACXxF,KAAQgI,EAAIhI,KACZ2F,OAAUqC,EAAIrC,OACdI,KAAQiC,EAAIjC,KACZC,UAAagC,EAAIhC,UACjBzB,KAAQyD,EAAIzD,KACZuB,WAAckC,EAAIlC,WAClBF,MAASoC,EAAIpC,MACblG,OAAS,GACTO,GAAM+H,EAAI/H,KAdP3C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,4BAA2BP,EAAAC,EAAAC,cAAA,4IAXzC2C,IAAMC,WA+BtBmC,mLACMtC,GAGJ,OAFY4F,GAAQrD,OAAO,SAAAC,GAAK,OAAIA,EAAMxC,KAAOA,IAEtC,oCAIX,IAAM+H,EAAMrL,KAAKsL,QAAQrF,SAASjG,KAAK8D,MAAMoC,MAAMC,OAAO7C,GAAI,KAE9D,OAAK+H,EAKD1K,EAAAC,EAAAC,cAAC2K,GAAD,CACInI,KAAQgI,EAAIhI,KACZ2F,OAAUqC,EAAIrC,OACdI,KAAQiC,EAAIjC,KACZC,UAAagC,EAAIhC,UACjBG,QAAW6B,EAAIzD,KACfuB,WAAckC,EAAIlC,WAClBpG,OAAS,GACTO,GAAM+H,EAAI/H,KAZT3C,EAAAC,EAAAC,cAAA,OAAKK,UAAY,4BAA2BP,EAAAC,EAAAC,cAAA,4IAX1C2C,IAAMC,WAmEVgI,oLApCP,IAAMC,EAAOxC,GAAQ3C,IAAI,SAAAT,GAAK,OAAInF,EAAAC,EAAAC,cAAC8K,GAAD,CAC9B9C,IAAO/C,EAAM+C,IACbrC,IAAOV,EAAMxC,GACbD,KAAQyC,EAAMzC,KACd4F,MAASnD,EAAMmD,MACfD,OAAUlD,EAAMkD,OAChBpB,KAAQ9B,EAAM8B,KACdgE,OAAU9F,EAAMxC,GAChBiF,KAAI,sBAAA9B,OAA0BX,EAAMxC,QAGxC,OACI3C,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACIrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAO,iBAChBvE,OAAU,kBACNhC,EAAAC,EAAAC,cAAA,OAAKK,UAAY,qBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,wEACrBpD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMJ,UAAY,kCAAkCK,GAAK,8BAAzD,uEACAZ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKM,UAAY,0BACZwK,OAKjB/K,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,6BACVvE,OAAU,kBACNhC,EAAAC,EAAAC,cAACgL,GAAD,CAAW9H,SAAW,kIAG9BpD,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,kCAAkCzB,UAAaG,KAC7DjF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,yBAAyBzB,UAAa2F,aAhC7C5H,IAAMC,eCkDdqI,eA3GX,SAAAA,IAAc,IAAAjM,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8L,IACVjM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgM,GAAA3L,KAAAH,QAEKI,MAAQ,CACT4E,WAAW,GAGfnF,EAAKoF,YAAcpF,EAAKoF,YAAY1E,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPTA,6EAUA,IAAAqF,EAAAlF,KACVA,KAAKU,SAAS,CAACsE,WAAW,GAAO,WAf9B,IAAIG,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAgBjBE,KAAK,WAC1BJ,EAAKxE,SAAS,CAAEsE,WAAW,yCAK9B,IAAAO,EAAAvF,KACEgF,EAAahF,KAAKI,MAAlB4E,UAEP,OACIrE,EAAAC,EAAAC,cAAA,OAAKK,UAAY,gBACbP,EAAAC,EAAAC,cAACqD,EAAD,CAAUH,SAAW,qLACrBpD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,cAAiB,CACbhD,MAAO,GACPE,SAAU,GACVG,SAAU,IAEd4C,iBAAoBpD,EACpBqD,SAAYxC,KAAKiF,YAEjBtC,OAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAAX,OAENnC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgB,KAAK,UACLN,OAAO,GACPC,OAAO,OACP9B,UAAY,YAEhBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACPP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,YAAjB,sBACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAK,OACLhC,UAAU,eACVmC,KAAK,aAGLR,EAAOrD,UACPsD,EAAQtD,UAAYmB,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOrD,WAGnEmB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,SAAjB,UACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAK,QACLhC,UAAU,eACViC,mBAAiB,YACjBC,YAAY,sBACZC,KAAK,UAGLR,EAAOvD,OACPwD,EAAQxD,OAASqB,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOvD,OAE5DqB,EAAAC,EAAAC,cAAA,SAAOyC,GAAG,YAAYpC,UAAU,wBAAhC,iUAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAAA,SAAOoC,QAAU,YAAjB,wCACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIa,KAAK,WACLhC,UAAU,eACVkC,YAAY,kFACZC,KAAK,aAGLR,EAAOlD,UACPmD,EAAQnD,UAAYgB,EAAAC,EAAAC,cAAA,OAAKK,UAAY,eAAe2B,EAAOlD,WAG/DgB,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAeM,UAAY,0BACvBP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,UACVC,UAAY,OACZgC,KAAO,SACPG,KAAK,SACLsC,SAAYX,GAEXA,EAAY,sDAAgB,gHAEjCrE,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACIK,QAAU,YACVoC,KAAK,SACLvB,QAAW,kBAAMyD,EAAKzB,MAAMiI,QAAQC,WAHxC,qDA5FdxI,IAAMC,qBCqBbwI,4LApBP,OACItL,EAAAC,EAAAC,cAAA,QAAMe,MAAS,CAACwC,SAAU,UAAYlD,UAAY,WAC9CP,EAAAC,EAAAC,cAACqL,GAAA,gBAAD,KACIvL,EAAAC,EAAAC,cAACqL,GAAA,cAAD,CAAeC,WAAW,OAAOC,QAAS,IAAK5F,IAAOxG,KAAK8D,MAAMuI,SAAS7F,KACtE7F,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAQqF,SAAYrM,KAAK8D,MAAMuI,UAC3B1L,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAO,SAASzB,UAAaxB,IAC1CtD,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,uBAAuBzB,UAAaY,IAClD1F,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,iBAAiBzB,UAAagG,KAC5C9K,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOC,KAAO,aAAazB,UAAaqG,KACxCnL,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAOtE,OAAU,kBACbhC,EAAAC,EAAAC,cAAA,MAAIK,UAAY,eAAhB,2BAZbsC,IAAMC,YCcV6I,oLAVX,OACE3L,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAC0L,EAAD,MACA5L,EAAAC,EAAAC,cAAC2L,GAAD,CAAMH,SAAYrM,KAAK8D,MAAMuI,WAC7B1L,EAAAC,EAAAC,cAAC4L,EAAD,cANUhJ,aCFEiJ,QACW,cAA7BC,OAAON,SAASO,UAEe,UAA7BD,OAAON,SAASO,UAEhBD,OAAON,SAASO,SAAS1G,MACvB,yECXN2G,IAASlK,OACLhC,EAAAC,EAAAC,cAACiM,GAAA,EAAD,KACInM,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACItE,OAAU,SAAAC,GAAA,IAAEyJ,EAAFzJ,EAAEyJ,SAAF,OACN1L,EAAAC,EAAAC,cAACkM,GAAD,CAAKV,SAAYA,QAI1BW,SAASC,eAAe,SDkHzB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9H,KAAK,SAAA+H,GACjCA,EAAaC,6EEnInBvO,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.743eec75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lot(10).335854a3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/bin.1df37bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.4499b027.svg\";","import * as Yup from 'yup';\r\n\r\nconst RegistrFormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Пожалуйста, введите корректный e-mail')\r\n        .required('Поле должно быть заполнено'),\r\n    username: Yup.string()\r\n        .min(4, 'Должно быть длиной не менее 4 символов')\r\n        .max(20, 'Хорошая попытка, ни у кого нет такого длинного имени')\r\n        .required('Поле должно быть заполнено'),\r\n    password: Yup.string()\r\n        .min(8, 'Должен быть длиной не менее 8 символов')\r\n        .required('Поле должно быть заполнено')\r\n});\r\n\r\nexport default RegistrFormSchema;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './css/NavBar.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport RegistrFormSchema from './RegistrFormSchema';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            show: false\r\n        };\r\n\r\n        this.handleClose = this.handleClose.bind(this); \r\n        this.handleOpen = this.handleOpen.bind(this); \r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Navbar bg = 'dark' variant = 'dark' className = 'mx-auto nav sticky-top' collapseOnSelect expand = 'sm' fixed = 'top'>\r\n                <Link className = 'navbar-brand' to = '/folio'><h3 className = 'm-auto'>.FOLIO</h3></Link>\r\n                <Navbar.Toggle aria-controls = 'responsive-navbar-nav' />\r\n                <Navbar.Collapse>\r\n                    <Nav className = 'ml-auto mr-0 ' style = {{color: 'white'}}>\r\n                        <Link to = '/folio' className = 'nav-link'>ГЛАВНАЯ</Link>\r\n                        <Link to = '/folio/photographers' className = 'nav-link'>ФОТОГРАФЫ</Link>\r\n                        <Link to = '/folio/auction' className = 'nav-link'>АУКЦИОН</Link>\r\n                    </Nav>\r\n                <Nav className = 'mr-0 ml-auto login text-right'>\r\n                    <div >\r\n                        <Nav.Link  onClick = {this.handleOpen}>ВОЙТИ</Nav.Link>\r\n                    </div>\r\n                    <Link to = '/folio/reg' className = 'nav-link'>ЗАРЕГИСТРИРОВАТЬСЯ</Link>\r\n                </Nav>\r\n                </Navbar.Collapse> \r\n            </Navbar>\r\n            <Modal show = {this.state.show} onHide = {this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Авторизация</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Formik \r\n                        initialValues = {{\r\n                            email: '',\r\n                            password: ''\r\n                        }}\r\n                        validationSchema = {RegistrFormSchema}\r\n                        onSubmit = {() => console.log('done!')}\r\n                        \r\n                        render = {({ errors, touched}) => (\r\n                            <Form\r\n                                action=\"\" \r\n                                method=\"post\"\r\n                            >\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor = 'email'>E-mail</label>\r\n                                    <Field \r\n                                        type=\"email\" \r\n                                        className=\"form-control\" \r\n                                        aria-describedby=\"emailHelp\" \r\n                                        placeholder=\"example@example.com\" \r\n                                        name=\"email\"\r\n                                    />\r\n                                    {\r\n                                        errors.email &&\r\n                                        touched.email && <div className = 'text-danger'>{errors.email}</div>\r\n                                    }\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">Мы никогда не передадим вашу электронную почту кому-либо еще.</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor = 'password'>Пароль</label>\r\n                                    <Field \r\n                                        type=\"password\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"Введите пароль\" \r\n                                        name=\"password\"\r\n                                    />\r\n                                    {\r\n                                        errors.password &&\r\n                                        touched.password && <div className = 'text-danger'>{errors.password}</div>\r\n                                    }\r\n                                </div>\r\n                                <Button \r\n                                    variant = 'primary'\r\n                                    //onClick = {this.handleClose}\r\n                                    type = 'submit'\r\n                                    className = 'd-block mx-auto'\r\n                                >\r\n                                    Войти\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavBar from './NavBar';\r\nimport './css/Header.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n            <header className = 'mx-auto header'>\r\n                <Container className='tag'>\r\n                    <h1>.FOLIO</h1>\r\n                    <h1>PHOTO</h1>\r\n                    <h1>IT'S</h1>\r\n                    <h1>OUR LIFE</h1>\r\n                    <h3>-------------------------</h3>\r\n                </Container>\r\n            </header>\r\n            <NavBar/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './css/Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className = 'footer mx-auto'>\r\n                <div className = 'text-center mt-auto mb-0 text-white'>&copy; Dmitry Saveliev, 2019</div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './css/Headline.css'\r\n\r\nclass Headline extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2 className = 'headline text-center mb-4'>\r\n                {this.props.headline.toUpperCase()} /\r\n            </h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Headline;","import React from 'react';\r\nimport Headline from './Headline';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './css/About.css';\r\nimport './css/Main.css';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = 'mx-auto main-content'>\r\n                <Headline headline = 'о сервисе'/>\r\n                <Row className = 'mx-auto' style = {{maxWidth: '1300px'}}>\r\n                    <Col className = 'text-justify d-flex align-items-center'>\r\n                        <div>\r\n                            <p>\r\n                            Сервис предназначен для проведения аукционов фотографий.\r\n                            Здесь вы можете просмотреть список фотографов,которые предоставляют свои работы для покупки, а также весь список лотов.\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","const photData = [\r\n    {\r\n        fio: 'Макаров Лаврентий Максимович',\r\n        birthday: '1965-06-05',\r\n        inform: '-',\r\n        id: 1\r\n    },\r\n    {\r\n        fio: 'Захарова Агата Андреевна',\r\n        birthday: '1987-04-20',\r\n        inform: '-',\r\n        id: 2\r\n    },\r\n    {\r\n        fio: 'Романов Болеслав Богданович',\r\n        birthday: '1981-09-27',\r\n        inform: '-',\r\n        id: 3\r\n    },\r\n    {\r\n        fio: 'Ушакова Милена Петровна',\r\n        birthday: '1965-06-05',\r\n        inform: '-',\r\n        id: 4\r\n    },\r\n    {\r\n        fio: 'Кириллова Домна Иосифовна',\r\n        birthday: '1969-06-14',\r\n        inform: '-',\r\n        id:5\r\n    },\r\n    {\r\n        fio: 'Усачёв Вениамин Матвеевич',\r\n        birthday: '1986-10-11',\r\n        inform: '-',\r\n        id:6\r\n    },\r\n    {\r\n        fio: 'Байков Тимофей Артемович',\r\n        birthday: '1969-05-10',\r\n        inform: '-',\r\n        id: 7\r\n    }\r\n];\r\n\r\nexport default photData;","import * as Yup from 'yup';\r\n\r\nconst AddPhotographerSchema = Yup.object().shape({\r\n    fio: Yup.string()\r\n        .min(4, 'Должны быть длиной не менее 4 символов')\r\n        .required('Поле должно быть заполнено'),\r\n    birthday: Yup.date()\r\n        .max(new Date(max()), 'Ваш возраст должен быть не менее 16 лет')\r\n        .required('Поле должно быть заполнено'),\r\n    inform: Yup.string() \r\n});\r\n\r\nfunction max() {\r\n    let age = new Date();\r\n            \r\n    return age.setFullYear(age.getFullYear() - 16);\r\n}\r\n\r\nexport default AddPhotographerSchema;","import React from 'react';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Headline from './Headline';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport AddPhotographerSchema from './AddPhotographerSchema';\r\nimport './css/Main.css';\r\nimport './css/forms.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise(resolve => setTimeout(resolve, 500));\r\n  }\r\n\r\nclass AddPhotographer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading : false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({isLoading: true}, () => {\r\n            simulateNetworkRequest().then(() => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {isLoading} = this.state;\r\n\r\n        return (\r\n            <div className = 'main-content'>\r\n                <Headline headline = {this.props.headline}/>\r\n                <Formik\r\n                    initialValues = {{\r\n                        fio: this.props.fio === undefined ? '' : this.props.fio,\r\n                        birthday: this.props.birthday === undefined ? '' : this.props.birthday,\r\n                        inform: this.props.inform === undefined ? '' : this.props.inform\r\n                    }}\r\n                    validationSchema = {AddPhotographerSchema}\r\n                    onSubmit = {this.handleClick}\r\n\r\n                    render = {({errors, touched}) => (\r\n                        <Form\r\n                            name = {this.props.name}\r\n                            action = {this.props.action}\r\n                            method = 'post'\r\n                            className = 'form-box'\r\n                        >\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'fio'>ФИО</label>\r\n                                <Field \r\n                                    type = 'text'\r\n                                    className = 'form-control'\r\n                                    name = 'fio'\r\n                                />\r\n                                {\r\n                                    errors.fio &&\r\n                                    touched.fio && <div className = 'text-danger'>{errors.fio}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'birthday'>Дата рождения</label>\r\n                                <Field \r\n                                    type = 'date'\r\n                                    className = 'form-control'\r\n                                    name = 'birthday'\r\n                                />\r\n                                {\r\n                                    errors.birthday &&\r\n                                    touched.birthday && <div className = 'text-danger'>{errors.birthday}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'inform'>Информация</label>\r\n                                <Field \r\n                                    component = 'textarea'\r\n                                    className = 'form-control'\r\n                                    name = 'inform'\r\n                                />\r\n                                {\r\n                                    errors.inform &&\r\n                                    touched.inform && <div className = 'text-danger'>{errors.inform}</div>\r\n                                }\r\n                            </div>\r\n                            <ButtonToolbar className = 'justify-content-center'>\r\n                                    <Button \r\n                                        variant = 'primary' \r\n                                        className = 'mr-3' \r\n                                        type = 'submit'\r\n                                        name=\"submit\"\r\n                                        disabled = {isLoading}\r\n                                    >\r\n                                        {isLoading ? 'Отправка...' : 'Сохранить'}\r\n                                    </Button>\r\n                                    <Link \r\n                                        className = 'btn btn-secondary'\r\n                                        name=\"cancel\"\r\n                                        to = '/folio/photographers'\r\n                                    >\r\n                                        Отмена\r\n                                    </Link>\r\n                                </ButtonToolbar>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPhotographer;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './css/Main.css';\r\nimport Headline from './Headline';\r\nimport photData from './photData';\r\nimport bin from './images/bin.svg';\r\nimport pencil from './images/pencil.svg';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\nimport AddPhotographer from './AddPhotographer';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Edit extends React.Component {\r\n    findPhotographer(id) {\r\n        const phot = photData.filter(value => value.id === id);\r\n\r\n        return phot[0];\r\n    }\r\n\r\n    render() {\r\n        const phot = this.findPhotographer(parseInt(this.props.match.params.id, 10));\r\n\r\n        if (!phot) {\r\n          return <div className = 'main-content text-center'><h4>Извините, фотограф не найден</h4></div>\r\n        }\r\n\r\n        return(\r\n            <AddPhotographer \r\n                name = 'formEdPeople'\r\n                action = ''\r\n                headline = 'редактирование информации о фотографе'\r\n                fio = {phot.fio}\r\n                birthday = {phot.birthday}\r\n                inform = {phot.inform}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nclass Photographers extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fio: '',\r\n            birthday: '',\r\n            inform: '',\r\n            show: false,\r\n            id: ''\r\n        }\r\n\r\n        this.dataState = this.dataState.bind(this);\r\n        this.handleClose = this.handleClose.bind(this); \r\n        this.handleOpen = this.handleOpen.bind(this); \r\n    }\r\n\r\n    dataState(fio, birthday, inform) {\r\n        this.setState({\r\n            fio: fio,\r\n            birthday: birthday,\r\n            inform: inform\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    handleOpen(id, fio) {\r\n        this.setState({\r\n            show: true,\r\n            id: id,\r\n            fio: fio\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const phot = photData.map(value => \r\n                <tr key = {value.id}>\r\n                    <td>{value.fio}</td>\r\n                    <td>{value.birthday}</td>\r\n                    <td>{value.inform}</td>\r\n                    <td className = 'text-center'>\r\n                        <Link \r\n                            className = 'mr-3 mb-3'\r\n                            to = {`/folio/photographers/edit-photographer/${value.id}`} \r\n                            title = 'Редактировать'\r\n                        >\r\n                            <img src = {pencil} alt = 'Редактировать'/>\r\n                        </Link>\r\n                        <span \r\n                            onClick = {() => this.handleOpen(value.id, value.fio)} \r\n                            style = {{cursor: 'pointer'}}\r\n                        >\r\n                            <img src = {bin} alt = 'Удалить'/>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        return(\r\n            <>\r\n                <Switch>\r\n                    <Route path = '/folio/photographers/add-photographer' \r\n                        render = {() => \r\n                            <AddPhotographer \r\n                                name = 'formAddPeople'\r\n                                action = ''\r\n                                headline = 'добавление информации о фотографе' \r\n                            />\r\n                        } \r\n                    />\r\n                    <Route exact path = '/folio/photographers' \r\n                        render = {() =>\r\n                            <div className = 'main-content px-3'>\r\n                                <Headline headline = 'фотографы'/>\r\n                                    <Link className = 'btn btn-primary mb-3 text-white' to = '/folio/photographers/add-photographer'>Добавить фотографа</Link>\r\n                                    <Table variant = 'dark' striped hover bordered responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>ФИО</th>\r\n                                                <th>Дата рождения</th>\r\n                                                <th>Информация</th>\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {phot}\r\n                                        </tbody>\r\n                                    </Table>\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <Route \r\n                        path = '/folio/photographers/edit-photographer/:id' \r\n                        component = {Edit}\r\n                            />\r\n                        }\r\n                    />\r\n                </Switch>\r\n                <Modal show = {this.state.show} onHide = {this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Удаление</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Удалить запись о фотографе:</p>\r\n                            <p>{this.state.fio}</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick = {this.handleClose}>Нет</Button>\r\n                            <Button variant=\"danger\" data-id = {this.state.id}>Да</Button>\r\n                        </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Photographers;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Lot extends React.Component {\r\n    endAuction() {\r\n        const endDate = new Date(this.props.date);\r\n        const now = new Date();\r\n        const total = endDate.getTime() - now.getTime();\r\n\r\n        if(total >= 0) {\r\n            return this.props.date;\r\n        }\r\n        else if (endDate.getMonth() === now.getMonth() && endDate.getDate() === now.getDate()) {\r\n                return 'Сегодня';\r\n            }\r\n            else return 'Завершен';\r\n    }\r\n\r\n    render() {\r\n        const date = this.endAuction();\r\n        return(\r\n            <Col xl = {3} lg = {4} md = {5} sm = {6}>\r\n                <Link \r\n                    style = {{maxWidth: '300px', textDecoration: 'none'}} \r\n                    className = 'card overflow-hidden mx-auto mb-4' \r\n                    to = {this.props.link}\r\n                >\r\n                        <div className = 'bg-secondary d-flex justify-content-center align-items-center img-lot-container' style = {{width: '100%', height: '250px', maxHeight: '250px'}}>\r\n                            <Card.Img variant = 'top' src = {this.props.img} style = {{height: 'auto', maxWidth: '100%', width: 'auto', maxHeight: '250px'}}/>\r\n                        </div>\r\n                        <Card.Body>\r\n                            <Card.Title className = 'text-dark'>{this.props.name}</Card.Title>\r\n                        </Card.Body>\r\n                        <ListGroup className = 'list-group-flush'>\r\n                            <ListGroup.Item className = 'd-flex' style = {{height: '75px'}}>\r\n                                <div className = 'text-dark'>Автор:</div>\r\n                                <div className = 'text-secondary ml-auto mr-0 text-right'>\r\n                                    {this.props.author}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className = 'd-flex'>\r\n                                <div className = 'text-dark'>Текущая цена:</div>\r\n                                <div className = 'text-primary ml-auto mr-0 text-right font-weight-bold'>\r\n                                    {this.props.price}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Card.Footer>\r\n                            <small className = 'text-muted d-flex'>\r\n                                <div>Дата окончания:</div>\r\n                                <div className = 'ml-auto mr-0 text-right font-weight-normal'>\r\n                                    {date}\r\n                                </div>\r\n                            </small>\r\n                        </Card.Footer>\r\n                </Link>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lot;","import img from './lot(9).JPG';\r\nimport img1 from './lot(10).JPG';\r\nimport photData from './photData';\r\n\r\nconst lotData = [\r\n    {\r\n        img: img,\r\n        name: '123',\r\n        author:photData[0].fio,\r\n        price: '100',\r\n        date:'2019-03-17',\r\n        id: 1,\r\n        startPrice: '50',\r\n        year: 2012,\r\n        startDate: '2019-01-15'\r\n    },\r\n    {\r\n        img: img1,\r\n        name: '2626',\r\n        author:photData[4].fio,\r\n        price: '500',\r\n        date:'2019-05-20',\r\n        id: 2,\r\n        startPrice: '200',\r\n        year: '2011',\r\n        startDate: '2019-01-25'\r\n    },\r\n    {\r\n        img: img,\r\n        name: 'agag',\r\n        author:photData[1].fio,\r\n        price: '1000',\r\n        date:'2019-01-30',\r\n        id: 3,\r\n        startPrice: '800',\r\n        year: '2013',\r\n        startDate: '2019-01-15'\r\n    },\r\n    {\r\n        img: img1,\r\n        name: '1agag3',\r\n        author:photData[2].fio,\r\n        price: '700',\r\n        date:'2019-01-30',\r\n        id: 4,\r\n        startPrice: '100',\r\n        year: '2017',\r\n        startDate: '2019-01-12'\r\n    },\r\n    {\r\n        img: img,\r\n        name: 'agag',\r\n        author:photData[5].fio,\r\n        price: '500',\r\n        date:'2019-01-30',\r\n        id: 5,\r\n        startPrice: '150',\r\n        year: '2019',\r\n        startDate: '2019-01-10'\r\n    }\r\n];\r\n\r\nexport default lotData;","import * as Yup from 'yup';\r\n\r\nconst AddNewLotSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .required('Поле должно быть заполнено'),\r\n    year: Yup.number()\r\n        .max(max(), 'Год должен быть не позже нынешнего')\r\n        .required('Поле должно быть заполнено'),\r\n    startPrice: Yup.number()\r\n        .min(0, 'Цена не может быть отрицательной')\r\n        .required('Поле должно быть заполнено'),\r\n    dateEnd: Yup.date()\r\n        .min(new Date(), 'Дата окончания не может быть прошедшей')\r\n        .required('Поле должно быть заполнено')\r\n});\r\n\r\nfunction max() {\r\n    let year = new Date();\r\n\r\n    return year.getFullYear();\r\n}\r\n\r\nexport default AddNewLotSchema;","import React from 'react';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Headline from './Headline';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport AddNewLotSchema from './AddNewLotSchema';\r\nimport './css/Main.css';\r\nimport './css/forms.css';\r\nimport photData from './photData';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise(resolve => setTimeout(resolve, 500));\r\n  }\r\n\r\nclass AddNewLot extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading : false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({isLoading: true}, () => {\r\n            simulateNetworkRequest().then(() => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoading} = this.state;\r\n        const photographers = photData.map(val =><option value={val.fio} key = {val.id}>{val.fio}</option>);\r\n\r\n        return(\r\n            <div className = 'main-content'>\r\n                <Headline headline = {this.props.headline}/>\r\n                <Formik \r\n                    initialValues = {{\r\n                        name: '',\r\n                        year:'',\r\n                        startPrice:'',\r\n                        dateEnd:'',\r\n                        author:'',\r\n                        addFile: ''\r\n                    }}\r\n                    validationSchema = {AddNewLotSchema}\r\n                    onSubmit = {this.handleClick}\r\n\r\n                    render = {({ errors, touched }) => (\r\n                        <Form\r\n                            name = 'formAddLot'\r\n                            action = {this.props.action}\r\n                            method = 'post'\r\n                            className = 'form-box'\r\n                        >\r\n                             <div className = 'form-group'>\r\n                                <label htmlFor = 'name'>Название лота</label>\r\n                                <Field \r\n                                    type = 'text'\r\n                                    className = 'form-control'\r\n                                    name = 'name'\r\n                                />\r\n                                {\r\n                                    errors.name &&\r\n                                    touched.name && <div className = 'text-danger'>{errors.name}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'author'>Автор</label>\r\n                                <Field \r\n                                    component = 'select'\r\n                                    className = 'form-control'\r\n                                    name = 'author'\r\n                                >\r\n                                {\r\n                                    errors.author &&\r\n                                    touched.author && <div className = 'text-danger'>{errors.author}</div>\r\n                                }\r\n                                    {photographers}\r\n                                </Field>\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'year'>Год</label>\r\n                                <Field \r\n                                    type = 'number'\r\n                                    className = 'form-control'\r\n                                    name = 'year'\r\n                                />\r\n                                {\r\n                                    errors.year &&\r\n                                    touched.year && <div className = 'text-danger'>{errors.year}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'priceStart'>Стартовая цена</label>\r\n                                <Field \r\n                                    type = 'number'\r\n                                    className = 'form-control'\r\n                                    name = 'priceStart'\r\n                                />\r\n                                {\r\n                                    errors.priceStart &&\r\n                                    touched.priceStart && <div className = 'text-danger'>{errors.priceStart}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'dateEnd'>Дата окончания</label>\r\n                                <Field \r\n                                    type = 'date'\r\n                                    className = 'form-control'\r\n                                    name = 'dateEnd'\r\n                                />\r\n                                {\r\n                                    errors.dateEnd &&\r\n                                    touched.dateEnd && <div className = 'text-danger'>{errors.dateEnd}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'addFile'>Загрузка фотографии</label>\r\n                                <Field \r\n                                    type = 'file'\r\n                                    className = 'form-control-file'\r\n                                    name = 'addFile'\r\n                                />\r\n                            </div>\r\n                            <ButtonToolbar className = 'justify-content-center'>\r\n                                    <Button \r\n                                        variant = 'primary' \r\n                                        className = 'mr-3' \r\n                                        type = 'submit'\r\n                                        name=\"submit\"\r\n                                        disabled = {isLoading}\r\n                                    >\r\n                                        {isLoading ? 'Отправка...' : 'Сохранить'}\r\n                                    </Button>\r\n                                    <Link \r\n                                        className = 'btn btn-secondary'\r\n                                        name=\"cancel\"\r\n                                        to = '/folio/auction'\r\n                                    >\r\n                                        Отмена\r\n                                    </Link>\r\n                                </ButtonToolbar>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewLot;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Headline from './Headline';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport {Link} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nclass LotDetails extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this); \r\n        this.handleOpen = this.handleOpen.bind(this); \r\n    }\r\n\r\n    endAuction() {\r\n        const endDate = new Date(this.props.date);\r\n        const now = new Date();\r\n        const total = Math.ceil((endDate.getTime() - now.getTime())/1000/60/60/24);\r\n        const string = total.toString();\r\n        const last = string[string.length-1];\r\n        const prev = string[string.length-2]\r\n        const days = () => {\r\n            if(last === '1' && prev !== '1') {\r\n                return 'день'\r\n            }\r\n            else if ((last === '2'|| last === '3' || last === '4') && prev !== '1') {\r\n                return 'дня'\r\n            }\r\n            else return 'дней'\r\n        }\r\n        \r\n        if(total >= 0) {\r\n            return [`${total} ${days()}`, false];\r\n        }\r\n        else if (endDate.getMonth() === now.getMonth() && endDate.getDate() === now.getDate()) {\r\n            return ['0 дней', false];\r\n        }\r\n        else return ['Завершен', true];\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    }\r\n\r\n    schema() {\r\n        let start = this.props.startPrice;\r\n        let current = this.props.price;\r\n        start = parseInt(start, 10);\r\n        current = parseInt(current, 10);\r\n\r\n        function minVal() {\r\n            if (current >= start) {\r\n                return current+1;\r\n            }\r\n            else return start;\r\n        }\r\n\r\n        const schema = Yup.object().shape({\r\n            rate: Yup.number()\r\n                .min(minVal(),`Минимальная ставка: ${minVal()} руб`)\r\n        });\r\n\r\n        return schema;\r\n    }\r\n\r\n    render() {\r\n        const days = this.endAuction()[0];\r\n        const buttonDis = this.endAuction()[1];\r\n        const schema = this.schema();\r\n\r\n        return(\r\n            <div className = 'main-content px-3'>\r\n            <Headline headline = 'подробно о лоте'/>\r\n            <ButtonToolbar className = 'mb-3 mt-3'>\r\n                <Button\r\n                    variant = 'danger'\r\n                    className = 'mr-2 mb-2'\r\n                    onClick = {() => this.handleOpen()} \r\n                >\r\n                    Удалить лот\r\n                </Button>\r\n                <Link\r\n                    variant = 'primary'\r\n                    className = 'mb-2 btn btn-primary'\r\n                    to = {`/folio/auction/lot/${this.props.id}/edit-lot`}\r\n                >\r\n                    Редактировать лот\r\n                </Link>\r\n            </ButtonToolbar>\r\n            <Row>\r\n                <Col className = 'justify-content-center' xl = {6} lg = {6} md = {6}>\r\n                    <img src = {this.props.img} style = {{maxWidth: 'auto', width: '100%'}} className = 'rounded' alt = {this.props.name}/>\r\n                </Col>\r\n                <Col xl = {6} lg= {6} md = {6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>{this.props.name}</Card.Title>\r\n                        </Card.Body>\r\n                        <ListGroup className = 'list-group-flush'>\r\n                            <ListGroup.Item className = 'd-flex' style = {{height: '75px'}}>\r\n                                <div>Автор:</div>\r\n                                <div className = 'text-secondary ml-auto mr-0 text-right'>\r\n                                    {this.props.author}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className = 'd-flex'>\r\n                                <div>Год:</div>\r\n                                <div className = 'text-secondary ml-auto mr-0 text-right'>\r\n                                    {this.props.year}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Card.Body>\r\n                            <Button \r\n                                className = 'mx-auto'\r\n                                variant = 'danger'\r\n                                block\r\n                                disabled\r\n                            >\r\n                                {this.props.startDate} - {this.props.date}\r\n                            </Button>\r\n                        </Card.Body>\r\n                        <ListGroup className = 'list-group-flush'>\r\n                            <ListGroup.Item className = 'd-flex'>\r\n                                <div>До окончания осталось:</div>\r\n                                <div className = 'text-dark ml-auto mr-0 text-right font-weight-bold'>\r\n                                    {days}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className = 'd-flex'>\r\n                                <div>Старт:</div>\r\n                                <div className = 'text-dark ml-auto mr-0 text-right font-weight-bold'>\r\n                                    {this.props.startPrice} руб\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className = 'd-flex'>\r\n                                <div>Текущая цена:</div>\r\n                                <div className = 'text-dark ml-auto mr-0 text-right font-weight-bold'>\r\n                                    <span className = 'text-success'>{this.props.price}</span> руб\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Card.Footer>\r\n                            <Formik \r\n                                initialValues = {{\r\n                                    rate: ''\r\n                                }}\r\n                                validationSchema = {schema}\r\n                                onSubmit = {() => console.log('done')}\r\n                                render = {({ errors, touched }) => (\r\n                                    <Form\r\n                                        name = 'formRate'\r\n                                        action = {this.props.action}\r\n                                        method = 'post'\r\n                                        className = 'form-box form-inline'\r\n                                    >\r\n                                        <div className = 'form-group mx-auto mt-2 d-flex flex-column'>\r\n                                            <Field\r\n                                                type = 'number'\r\n                                                className = 'form-control mr-auto'\r\n                                                name = 'rate'\r\n                                                disabled = {buttonDis}\r\n                                            />\r\n                                            {\r\n                                                errors.rate &&\r\n                                                touched.rate && <div className = 'text-danger mx-auto mt-1'>{errors.rate}</div>\r\n                                            }\r\n                                           \r\n                                        </div>\r\n                                        <Button \r\n                                                variant = 'primary' \r\n                                                className = 'mx-auto mt-2' \r\n                                                type = 'submit'\r\n                                                name=\"submit\"\r\n                                                disabled = {buttonDis}\r\n                                            >\r\n                                                Сделать ставку\r\n                                            </Button>\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Modal show = {this.state.show} onHide = {this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Удаление</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Удалить лот?</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick = {this.handleClose}>Нет</Button>\r\n                            <Button variant=\"danger\">Да</Button>\r\n                        </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LotDetails;","import * as Yup from 'yup';\r\nimport AddNewLotSchema from './AddNewLotSchema';\r\n\r\nconst EditLotSchema = AddNewLotSchema.clone().shape({\r\n    dateStart: Yup.date()\r\n        .required('Поле должно быть заполнено')\r\n        .min(min(), 'Дата начала не может быть прошедшей')\r\n});\r\n\r\nfunction min() {\r\n    let min = new Date();\r\n\r\n    min.setDate(min.getDate()-1);\r\n    return min;\r\n}\r\n\r\nexport default EditLotSchema;","import React from 'react';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Headline from './Headline';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport EditLotSchema from './EditLotSchema';\r\nimport './css/Main.css';\r\nimport './css/forms.css';\r\nimport photData from './photData';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise(resolve => setTimeout(resolve, 500));\r\n  }\r\n\r\nclass EditLot extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading : false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({isLoading: true}, () => {\r\n            simulateNetworkRequest().then(() => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoading} = this.state;\r\n        const photographers = photData.map(val =><option value={val.fio} key = {val.id}>{val.fio}</option>);\r\n\r\n        return(\r\n            <div className = 'main-content'>\r\n                <Headline headline = 'редактирование лота'/>\r\n                <Formik \r\n                    initialValues = {{\r\n                        name: this.props.name,\r\n                        dateEnd: this.props.dateEnd,\r\n                        startPrice: this.props.startPrice,\r\n                        author: this.props.author,\r\n                        dateStart: this.props.startDate,\r\n                        addFile: '',\r\n                        year: this.props.year\r\n                    }}\r\n                    validationSchema = {EditLotSchema}\r\n                    onSubmit = {this.handleClick}\r\n\r\n                    render = {({ errors, touched }) => (\r\n                        <Form\r\n                            name = 'formAddLot'\r\n                            action = {this.props.action}\r\n                            method = 'post'\r\n                            className = 'form-box'\r\n                        >\r\n                             <div className = 'form-group'>\r\n                                <label htmlFor = 'name'>Название лота</label>\r\n                                <Field \r\n                                    type = 'text'\r\n                                    className = 'form-control'\r\n                                    name = 'name'\r\n                                />\r\n                                {\r\n                                    errors.name &&\r\n                                    touched.name && <div className = 'text-danger'>{errors.name}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'author'>Автор</label>\r\n                                <Field \r\n                                    component = 'select'\r\n                                    className = 'form-control'\r\n                                    name = 'author'\r\n                                >\r\n                                {\r\n                                    errors.author &&\r\n                                    touched.author && <div className = 'text-danger'>{errors.author}</div>\r\n                                }\r\n                                    {photographers}\r\n\r\n                                </Field>\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'year'>Год</label>\r\n                                <Field \r\n                                    type = 'number'\r\n                                    className = 'form-control'\r\n                                    name = 'year'\r\n                                />\r\n                                {\r\n                                    errors.year &&\r\n                                    touched.year && <div className = 'text-danger'>{errors.year}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'startPrice'>Стартовая цена</label>\r\n                                <Field \r\n                                    type = 'number'\r\n                                    className = 'form-control'\r\n                                    name = 'startPrice'\r\n                                />\r\n                                {\r\n                                    errors.startPrice &&\r\n                                    touched.startPrice && <div className = 'text-danger'>{errors.startPrice}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'dateStart'>Дата начала</label>\r\n                                <Field \r\n                                    type = 'date'\r\n                                    className = 'form-control'\r\n                                    name = 'dateStart'\r\n                                />\r\n                                {\r\n                                    errors.dateStart &&\r\n                                    touched.dateStart && <div className = 'text-danger'>{errors.dateStart}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'dateEnd'>Дата окончания</label>\r\n                                <Field \r\n                                    type = 'date'\r\n                                    className = 'form-control'\r\n                                    name = 'dateEnd'\r\n                                />\r\n                                {\r\n                                    errors.dateEnd &&\r\n                                    touched.dateEnd && <div className = 'text-danger'>{errors.dateEnd}</div>\r\n                                }\r\n                            </div>\r\n                            <div className = 'form-group'>\r\n                                <label htmlFor = 'addFile'>Загрузка фотографии</label>\r\n                                <Field \r\n                                    type = 'file'\r\n                                    className = 'form-control-file'\r\n                                    name = 'addFile'\r\n                                />\r\n                            </div>\r\n                            <ButtonToolbar className = 'justify-content-center'>\r\n                                    <Button \r\n                                        variant = 'primary' \r\n                                        className = 'mr-3' \r\n                                        type = 'submit'\r\n                                        name=\"submit\"\r\n                                        disabled = {isLoading}\r\n                                    >\r\n                                        {isLoading ? 'Отправка...' : 'Сохранить'}\r\n                                    </Button>\r\n                                    <Link \r\n                                        className = 'btn btn-secondary'\r\n                                        name=\"cancel\"\r\n                                        to = {`/folio/auction/lot/${this.props.id}`}\r\n                                    >\r\n                                        Отмена\r\n                                    </Link>\r\n                                </ButtonToolbar>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditLot;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './css/Main.css';\r\nimport Headline from './Headline';\r\nimport Lot from './Lot';\r\nimport lotData from './lotData';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\nimport AddNewLot from './AddNewLot';\r\nimport LotDetails from './LotDetails';\r\nimport EditLot from './EditLot';\r\n\r\nclass Details extends React.Component {\r\n    findLot(id) {\r\n        const lot = lotData.filter(value => value.id === id);\r\n\r\n        return lot[0];\r\n    }\r\n\r\n    render() {\r\n        const lot = this.findLot(parseInt(this.props.match.params.id, 10));\r\n\r\n        if (!lot) {\r\n            return <div className = 'main-content text-center'><h4>Извините, лот не найден</h4></div>\r\n        }\r\n\r\n        return(\r\n            <LotDetails \r\n                img = {lot.img}\r\n                name = {lot.name}\r\n                author = {lot.author}\r\n                year = {lot.year}\r\n                startDate = {lot.startDate}\r\n                date = {lot.date}\r\n                startPrice = {lot.startPrice}\r\n                price = {lot.price}\r\n                action = ''\r\n                id = {lot.id}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nclass Edit extends React.Component {\r\n    findLot(id) {\r\n        const lot = lotData.filter(value => value.id === id);\r\n\r\n        return lot[0];\r\n    }\r\n\r\n    render() {\r\n        const lot = this.findLot(parseInt(this.props.match.params.id, 10));\r\n\r\n        if (!lot) {\r\n          return <div className = 'main-content text-center'><h4>Извините, лот не найден</h4></div>\r\n        }\r\n\r\n        return(\r\n            <EditLot \r\n                name = {lot.name}\r\n                author = {lot.author}\r\n                year = {lot.year}\r\n                startDate = {lot.startDate}\r\n                dateEnd = {lot.date}\r\n                startPrice = {lot.startPrice}\r\n                action = ''\r\n                id = {lot.id}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nclass LotsList extends React.Component {\r\n    render() {\r\n        const Lots = lotData.map(value => <Lot \r\n            img = {value.img} \r\n            key = {value.id}\r\n            name = {value.name}\r\n            price = {value.price}\r\n            author = {value.author}\r\n            date = {value.date} \r\n            dataId = {value.id}\r\n            link = {`/folio/auction/lot/${value.id}`} \r\n          />);\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path = '/folio/auction'\r\n                    render = {() =>\r\n                        <div className = 'main-content px-3'>\r\n                            <Headline headline = 'список лотов' />\r\n                            <Link className = 'btn btn-primary text-white mb-4' to = '/folio/auction/add-new-lot'>Добавить лот</Link>\r\n                            <Row className = 'justify-content-center'> \r\n                                {Lots}\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                />\r\n                <Route path = '/folio/auction/add-new-lot' \r\n                    render = {() =>\r\n                        <AddNewLot headline = 'добавление нового лота'/>\r\n                    } \r\n                />\r\n                <Route path = '/folio/auction/lot/:id/edit-lot' component = {Edit} />\r\n                <Route path = '/folio/auction/lot/:id' component = {Details}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LotsList;","import React from 'react';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Headline from './Headline';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport RegistrFormSchema from './RegistrFormSchema';\r\nimport './css/Main.css';\r\nimport './css/forms.css';\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise(resolve => setTimeout(resolve, 500));\r\n  }\r\n\r\nclass Registr extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading: false\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({isLoading: true}, () => {\r\n            simulateNetworkRequest().then(() => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoading} = this.state;\r\n\r\n        return(\r\n            <div className = 'main-content'>\r\n                <Headline headline = 'регистрация нового пользователя'/>\r\n                <Formik \r\n                    initialValues = {{\r\n                        email: '',\r\n                        username: '',\r\n                        password: ''\r\n                    }}\r\n                    validationSchema = {RegistrFormSchema}\r\n                    onSubmit = {this.handleClick}\r\n            \r\n                    render = {({ errors, touched }) => (\r\n                        \r\n                        <Form\r\n                            name=\"formreg\"\r\n                            action=\"\" \r\n                            method=\"post\"\r\n                            className = 'form-box'\r\n                        >\r\n                        <div className=\"form-group\">\r\n                                <label htmlFor = 'username'>Имя</label>\r\n                                <Field \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"username\"\r\n                                />\r\n                                {\r\n                                    errors.username &&\r\n                                    touched.username && <div className = 'text-danger'>{errors.username}</div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor = 'email'>E-mail</label>\r\n                                <Field \r\n                                    type=\"email\" \r\n                                    className=\"form-control\" \r\n                                    aria-describedby=\"emailHelp\" \r\n                                    placeholder=\"example@example.com\" \r\n                                    name=\"email\"\r\n                                />\r\n                                {\r\n                                    errors.email &&\r\n                                    touched.email && <div className = 'text-danger'>{errors.email}</div>\r\n                                }\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">Мы никогда не передадим вашу электронную почту кому-либо еще.</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor = 'password'>Пароль</label>\r\n                                <Field \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Введите пароль\" \r\n                                    name=\"password\"\r\n                                />\r\n                                {\r\n                                    errors.password &&\r\n                                    touched.password && <div className = 'text-danger'>{errors.password}</div>\r\n                                }\r\n                            </div>\r\n                                <ButtonToolbar className = 'justify-content-center'>\r\n                                    <Button \r\n                                        variant = 'primary' \r\n                                        className = 'mr-3' \r\n                                        type = 'submit'\r\n                                        name=\"submit\"\r\n                                        disabled = {isLoading}\r\n                                    >\r\n                                        {isLoading ? 'Отправка...' : 'Зарегистрироваться'}\r\n                                    </Button>\r\n                                    <Button \r\n                                        variant = 'secondary'\r\n                                        name=\"cancel\"\r\n                                        onClick = {() => this.props.history.goBack()} //вернуться назад\r\n                                    >\r\n                                        Отмена\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                        </Form>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registr;","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport About from './About';\r\nimport Photographers from './Photographers';\r\nimport LotsList from './LotsList';\r\nimport Registr from './Registr';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport './css/MainAnim.css';\r\n\r\nclass Main extends React.Component {\r\n    render(){\r\n        return(\r\n            <main style = {{maxWidth: '1300px',}} className = 'mx-auto'>\r\n                <TransitionGroup>\r\n                    <CSSTransition classNames=\"fade\" timeout={250} key = {this.props.location.key}>\r\n                        <Switch location = {this.props.location}>\r\n                            <Route exact path = '/folio' component = {About}/>\r\n                            <Route path = '/folio/photographers' component = {Photographers} />\r\n                            <Route path = '/folio/auction' component = {LotsList} />\r\n                            <Route path = '/folio/reg' component = {Registr} />\r\n                            <Route render = {() =>\r\n                                <h1 className = 'text-center'>Not Found</h1>\r\n                            } />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n//import Home from './components/Home';\n//import Registr from './components/Registr';\n//import AddPhotographer from './components/AddPhotographer';\n//import AddNewLot from './components/AddNewLot';\n//import EditLot from './components/EditLot';\n//import {LotsList} from './components/LotsList';\n//import Photographers from './components/Photographers';\n//import {getComp} from './components/LotsList';\nimport Main from './components/Main';\n//import LotDetails from './components/LotDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Main location = {this.props.location}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render((\n    <BrowserRouter>\n        <Route \n            render = {({location}) => (\n                <App location = {location}/>\n            )}\n        />\n    </BrowserRouter>\n    ), document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lot(9).cc4c5620.JPG\";"],"sourceRoot":""}